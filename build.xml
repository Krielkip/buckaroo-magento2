<?xml version="1.0" encoding="UTF-8"?>
<!--
**
 *                  ___________       __            __
 *                  \__    ___/____ _/  |_ _____   |  |
 *                    |    |  /  _ \\   __\\__  \  |  |
 *                    |    | |  |_| ||  |   / __ \_|  |__
 *                    |____|  \____/ |__|  (____  /|____/
 *                                              \/
 *          ___          __                                   __
 *         |   |  ____ _/  |_   ____ _______   ____    ____ _/  |_
 *         |   | /    \\   __\_/ __ \\_  __ \ /    \ _/ __ \\   __\
 *         |   ||   |  \|  |  \  ___/ |  | \/|   |  \\  ___/ |  |
 *         |___||___|  /|__|   \_____>|__|   |___|  / \_____>|__|
 *                  \/                           \/
 *                  ________
 *                 /  _____/_______   ____   __ __ ______
 *                /   \  ___\_  __ \ /  _ \ |  |  \\____ \
 *                \    \_\  \|  | \/|  |_| ||  |  /|  |_| |
 *                 \______  /|__|    \____/ |____/ |   __/
 *                        \/                       |__|
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Creative Commons License.
 * It is available through the world-wide-web at this URL:
 * http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 * If you are unable to obtain it through the world-wide-web, please send an email
 * to servicedesk@totalinternetgroup.nl so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact servicedesk@totalinternetgroup.nl for more information.
 *
 * @copyright   Copyright (c) 2015 Total Internet Group B.V. (http://www.totalinternetgroup.nl)
 * @license     http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 */
-->
<!--
composer config repositories.tig composer https://packages.tig.nl
-->
<project name="Buckaroo" default="build" basedir=".">
    <target name="build" depends="clone,composer.require-repo,setup-static-content-deploy,phpunit"/>

    <target name="build-dir.check">
        <condition property="build-dir.exist">
            <available file="${basedir}/Build/Magento 2/" type="dir" />
        </condition>
    </target>

    <target name="mkdir" depends="build-dir.check" unless="build-dir.exist">
        <echo>Creating Build/Magento 2</echo>
        <mkdir dir="Build/Magento 2/" />
    </target>

    <target name="clone" depends="build-dir.check,mkdir" unless="build-dir.exist">
        <echo>Clone the Magento 2 repository</echo>
        <exec executable="git">
            <arg value="clone" />
            <arg value="https://github.com/magento/magento2.git" />
            <arg value="Build/Magento 2" />
        </exec>
    </target>

    <target name="copy-env-files">
        <echo>Copy the env file</echo>
        <copy
            file="${basedir}/Test/Fixtures/env.php"
            tofile="${basedir}/Build/Magento 2/app/etc/env.php"
            />
    </target>

    <target name="composer.is-installed">
        <echo>Check if composer is already installed</echo>
        <condition property="composer.exist">
            <available file="${basedir}/Build/Magento 2/vendor/tig/buckaroo" type="dir" />
        </condition>
    </target>

    <target name="composer.install" depends="copy-env-files">
        <echo>Execute the composer install</echo>
        <exec executable="/usr/local/bin/composer" dir="Build/Magento 2/">
            <arg value="install" />
        </exec>
    </target>

    <target name="composer.add-repo" depends="composer.install" unless="composer.exist">
        <echo>Add the Buckaroo repository to Composer</echo>
        <exec executable="/usr/local/bin/composer" dir="Build/Magento 2/" failonerror="true">
            <arg value="config" />
            <arg value="repositories.buckaroo" />
            <arg value="vcs" />
            <arg value="git@bitbucket.org:tig-team/tig-extension-tig-buckaroo-magento2.git" />
        </exec>
    </target>

    <target name="composer.require-repo" depends="composer.is-installed,composer.install,composer.add-repo">
        <echo>Install the Buckaroo module via Composer</echo>
        <exec executable="/usr/local/bin/composer" dir="Build/Magento 2/" failonerror="true">
            <arg value="require" />
            <arg value="tig/buckaroo" />
            <arg value="dev-develop" />
        </exec>
    </target>

    <target name="database">
        <echo>Set the database to a fixed state</echo>
        <exec executable="mysql" dir="Build/Magento 2/" failonerror="true" input="Test/Fixtures/tig-buckaroo-fixture.sql">
            <arg value="--user=buckaroo" />
            <arg value="--password=12345" />
            <arg value="--database=buckaroo" />
        </exec>
    </target>

    <target name="set-permissions">
        <echo>Set the permissions on the var and pub folders.</echo>
        <exec executable="chmod">
            <arg value="777" />
            <arg value="${basedir}/Build/Magento 2/var/" />
            <arg value="-R" />
        </exec>

        <exec executable="chmod">
            <arg value="777" />
            <arg value="${basedir}/Build/Magento 2/pub/" />
            <arg value="-R" />
        </exec>
    </target>

    <target name="setup-upgrade" depends="database,set-permissions">
        <echo>Run the bin/magento setup:upgrade command</echo>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/Build/Magento 2/bin/magento" />
            <arg value="setup:upgrade" />
        </exec>
    </target>

    <target name="setup-static-content-deploy" depends="database,set-permissions,setup-upgrade">
        <echo>Run the bin/magento setup:static-content:deploy command</echo>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/Build/Magento 2/bin/magento" />
            <arg value="setup:static-content:deploy" />
            <arg value="nl_NL" />
        </exec>
    </target>

    <target name="phpunit" depends="composer.install">
        <echo>Execute the PHPUnit command</echo>
        <exec executable="${basedir}/Build/Magento 2/vendor/bin/phpunit" failonerror="true">
            <arg value="-c" />
            <arg value="phpunit.xml.dist" />
        </exec>
    </target>
</project>
